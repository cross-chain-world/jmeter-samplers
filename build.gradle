apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.github.johnrengelman.shadow'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath('com.github.jengelman.gradle.plugins:shadow:4.0.2')
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {

    implementation('com.jgoodies:forms:1.2.1') {
        transitive = false
    }

    implementation('org.interledger:ilp-core:0.14.0-SNAPSHOT')
    implementation('org.interledger:ilp-core-codecs:0.14.0-SNAPSHOT')
    implementation('org.interledger:btp-core:0.14.0-SNAPSHOT')
    implementation('org.interledger:btp-core-codecs:0.14.0-SNAPSHOT')
    implementation('org.interledger:codec-framework:0.14.0-SNAPSHOT')

    compile('net.luminis.jmeter:jmeter-websocket-samplers:1.2.1')

    compile('org.apache.jmeter:ApacheJMeter_core:5.0') {
        transitive = false    // Just avoid downloading half the internet
    }

    compile('org.apache.jmeter:ApacheJMeter_components:5.0') {
        transitive = false    // Just avoid downloading half the internet
    }

    compile('org.apache.jmeter:ApacheJMeter_http:5.0') {
        transitive = false    // Just avoid downloading half the internet
    }

    compile('org.apache.jmeter:jorphan:5.0') {
        transitive = false
    }
    compile('org.apache.avalon.logkit:avalon-logkit:2.2.1')
    {
        transitive = false
    }
    compile('org.slf4j:slf4j-api:1.7.25') {
        transitive = false
    }

    compile('org.apache.avalon.framework:avalon-framework-api:4.3.1')
    compile('org.apache.avalon.framework:avalon-framework-impl:4.3.1')

    compile('commons-codec:commons-codec:1.11')

    testCompile 'junit:junit:4.12'

    testCompile('org.mockito:mockito-core:2.2.15')

    // https://mvnrepository.com/artifact/commons-io/commons-io
    testCompile('commons-io:commons-io:2.5')

    testCompile 'org.assertj:assertj-core:3.8.0'
}

sourceSets {
    main {
        resources {
            srcDir "${buildDir}/generated"
        }
    }
}

